{"ast":null,"code":"import _objectSpread from\"C:/Users/Freddy/Desktop/dev/react-mesto-api-full-gha/react-mesto-api-full-gha/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{apiSettings,SERVER_ERRORS}from\"./utils\";var handleResponse=function handleResponse(res){if(res.ok){return res.json();}else{throw new Error(SERVER_ERRORS[res.status]);}};export var register=function register(registerData){return fetch(\"\".concat(apiSettings.serverURL,\"/signup\"),{method:\"POST\",headers:apiSettings.headers,body:JSON.stringify(registerData)}).then(function(res){return handleResponse(res);});};export var authorize=function authorize(loginData){return fetch(\"\".concat(apiSettings.serverURL,\"/signin\"),{method:\"POST\",headers:apiSettings.headers,body:JSON.stringify(loginData)}).then(function(res){return handleResponse(res);});};export var tokenCheck=function tokenCheck(token){return fetch(\"\".concat(apiSettings.serverURL,\"/users/me\"),{method:\"GET\",headers:_objectSpread({authorization:\"Bearer \"+localStorage.getItem(\"jwt\")},apiSettings.headers)}).then(function(res){return handleResponse(res);});};","map":{"version":3,"names":["apiSettings","SERVER_ERRORS","handleResponse","res","ok","json","Error","status","register","registerData","fetch","concat","serverURL","method","headers","body","JSON","stringify","then","authorize","loginData","tokenCheck","token","_objectSpread","authorization","localStorage","getItem"],"sources":["C:/Users/Freddy/Desktop/dev/react-mesto-api-full-gha/react-mesto-api-full-gha/frontend/src/utils/auth.js"],"sourcesContent":["import { apiSettings, SERVER_ERRORS } from \"./utils\";\n\nconst handleResponse = (res) => {\n  if (res.ok) {\n    return res.json();\n  } else {\n    throw new Error(SERVER_ERRORS[res.status]);\n  }\n};\n\nexport const register = (registerData) => {\n  return fetch(`${apiSettings.serverURL}/signup`, {\n    method: \"POST\",\n    headers: apiSettings.headers,\n    body: JSON.stringify(registerData),\n  }).then((res) => handleResponse(res));\n};\n\nexport const authorize = (loginData) => {\n  return fetch(`${apiSettings.serverURL}/signin`, {\n    method: \"POST\",\n    headers: apiSettings.headers,\n    body: JSON.stringify(loginData),\n  }).then((res) => handleResponse(res));\n};\n\nexport const tokenCheck = (token) => {\n  return fetch(`${apiSettings.serverURL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      ...apiSettings.headers,\n    },\n  }).then((res) => handleResponse(res));\n};\n"],"mappings":"2KAAA,OAASA,WAAW,CAAEC,aAAa,KAAQ,SAAS,CAEpD,GAAM,CAAAC,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAIC,GAAG,CAAK,CAC9B,GAAIA,GAAG,CAACC,EAAE,CAAE,CACV,MAAO,CAAAD,GAAG,CAACE,IAAI,CAAC,CAAC,CACnB,CAAC,IAAM,CACL,KAAM,IAAI,CAAAC,KAAK,CAACL,aAAa,CAACE,GAAG,CAACI,MAAM,CAAC,CAAC,CAC5C,CACF,CAAC,CAED,MAAO,IAAM,CAAAC,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAIC,YAAY,CAAK,CACxC,MAAO,CAAAC,KAAK,IAAAC,MAAA,CAAIX,WAAW,CAACY,SAAS,YAAW,CAC9CC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAEd,WAAW,CAACc,OAAO,CAC5BC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACR,YAAY,CACnC,CAAC,CAAC,CAACS,IAAI,CAAC,SAACf,GAAG,QAAK,CAAAD,cAAc,CAACC,GAAG,CAAC,GAAC,CACvC,CAAC,CAED,MAAO,IAAM,CAAAgB,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAIC,SAAS,CAAK,CACtC,MAAO,CAAAV,KAAK,IAAAC,MAAA,CAAIX,WAAW,CAACY,SAAS,YAAW,CAC9CC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAEd,WAAW,CAACc,OAAO,CAC5BC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACG,SAAS,CAChC,CAAC,CAAC,CAACF,IAAI,CAAC,SAACf,GAAG,QAAK,CAAAD,cAAc,CAACC,GAAG,CAAC,GAAC,CACvC,CAAC,CAED,MAAO,IAAM,CAAAkB,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAIC,KAAK,CAAK,CACnC,MAAO,CAAAZ,KAAK,IAAAC,MAAA,CAAIX,WAAW,CAACY,SAAS,cAAa,CAChDC,MAAM,CAAE,KAAK,CACbC,OAAO,CAAAS,aAAA,EACLC,aAAa,CAAE,SAAS,CAAGC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC,EACnD1B,WAAW,CAACc,OAAO,CAE1B,CAAC,CAAC,CAACI,IAAI,CAAC,SAACf,GAAG,QAAK,CAAAD,cAAc,CAACC,GAAG,CAAC,GAAC,CACvC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}