[{"C:\\Users\\Freddy\\Desktop\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\index.js":"1","C:\\Users\\Freddy\\Desktop\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\App.jsx":"2","C:\\Users\\Freddy\\Desktop\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\utils\\auth.js":"3","C:\\Users\\Freddy\\Desktop\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\utils\\api.js":"4","C:\\Users\\Freddy\\Desktop\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\ProtectedRoute.js":"5","C:\\Users\\Freddy\\Desktop\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\Header.jsx":"6","C:\\Users\\Freddy\\Desktop\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\contexts\\CurrentUserContext.js":"7","C:\\Users\\Freddy\\Desktop\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\Main.jsx":"8","C:\\Users\\Freddy\\Desktop\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\Footer.jsx":"9","C:\\Users\\Freddy\\Desktop\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\ImagePopup.jsx":"10","C:\\Users\\Freddy\\Desktop\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\EditAvatarPopup.jsx":"11","C:\\Users\\Freddy\\Desktop\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\PopupWithForm.jsx":"12","C:\\Users\\Freddy\\Desktop\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\EditProfilePopup.jsx":"13","C:\\Users\\Freddy\\Desktop\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\Login.jsx":"14","C:\\Users\\Freddy\\Desktop\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\InfoTooltip.jsx":"15","C:\\Users\\Freddy\\Desktop\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\AddPlacePopup.jsx":"16","C:\\Users\\Freddy\\Desktop\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\Register.jsx":"17","C:\\Users\\Freddy\\Desktop\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\utils\\utils.js":"18","C:\\Users\\Freddy\\Desktop\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\Card.jsx":"19","C:\\Users\\Freddy\\Desktop\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\Popup.jsx":"20"},{"size":363,"mtime":1694021730611,"results":"21","hashOfConfig":"22"},{"size":8928,"mtime":1694030348960,"results":"23","hashOfConfig":"22"},{"size":930,"mtime":1694030698797,"results":"24","hashOfConfig":"22"},{"size":2572,"mtime":1694030698196,"results":"25","hashOfConfig":"22"},{"size":292,"mtime":1694021732334,"results":"26","hashOfConfig":"22"},{"size":2288,"mtime":1694030460192,"results":"27","hashOfConfig":"22"},{"size":87,"mtime":1694021732382,"results":"28","hashOfConfig":"22"},{"size":2075,"mtime":1694030503740,"results":"29","hashOfConfig":"22"},{"size":231,"mtime":1694021732172,"results":"30","hashOfConfig":"22"},{"size":911,"mtime":1694021732208,"results":"31","hashOfConfig":"22"},{"size":3291,"mtime":1694030302461,"results":"32","hashOfConfig":"22"},{"size":1598,"mtime":1694021732314,"results":"33","hashOfConfig":"22"},{"size":4619,"mtime":1694030485131,"results":"34","hashOfConfig":"22"},{"size":1962,"mtime":1694030482774,"results":"35","hashOfConfig":"22"},{"size":1365,"mtime":1694021732228,"results":"36","hashOfConfig":"22"},{"size":4238,"mtime":1694030493173,"results":"37","hashOfConfig":"22"},{"size":2165,"mtime":1694021732355,"results":"38","hashOfConfig":"22"},{"size":552,"mtime":1694030638034,"results":"39","hashOfConfig":"22"},{"size":1508,"mtime":1694030303493,"results":"40","hashOfConfig":"22"},{"size":930,"mtime":1694030530119,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zsxto0",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},"C:\\Users\\Freddy\\Desktop\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\index.js",[],[],"C:\\Users\\Freddy\\Desktop\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\App.jsx",["105"],[],"import React, { useEffect, useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Main from \"./Main\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { api } from \"../utils/api\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport { Routes, Route, useNavigate, Navigate } from 'react-router-dom';\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport * as Auth from \"../utils/auth.js\";\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [isLoadingAllData, setIsLoadingAllData] = useState(false);\n  const [infoTooltipOpen, setInfoTooltipOpen] = useState(false);\n  const [infoTooltipType, setInfoTooltipType] = useState(\"error\");\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [editProfilePopupOpen, setEditProfilePopupOpen] =\n    React.useState(false);\n  const [newPlacePopupOpen, setNewPlacePopupOpen] = React.useState(false);\n  const [updateAvatarPopupOpen, setUpdateAvatarPopupOpen] =\n    React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({\n    name: \"\",\n    link: \"\",\n  });\n  const [deletePlacePopupOpen, setDeletePlacePopupOpen] =\n    React.useState(false);\n  const [deleteCard, setDeleteCard] = React.useState({ _id: \"\" });\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  function closeAllPopups() {\n    setEditProfilePopupOpen(false);\n    setNewPlacePopupOpen(false);\n    setUpdateAvatarPopupOpen(false);\n    setSelectedCard({ name: \"\", link: \"\" });\n    setDeletePlacePopupOpen(false);\n    setDeleteCard({ _id: \"\" });\n    setInfoTooltipOpen(false);\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some((i) => i === currentUser._id);\n\n    api.changeLikeCardStatus(card._id, isLiked)\n      .then((newCard) => {\n        setCards((state) =>\n          state.map((c) => (c._id === card._id ? newCard : c))\n        );\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleCardDelete(evt) {\n    evt.preventDefault();\n    setIsLoading(true);\n    api.removeCard(deleteCard._id)\n      .then(() => {\n        setCards((state) => state.filter((currentCard) => currentCard._id !== deleteCard._id));\n        closeAllPopups();\n      })\n      .catch((err) => console.log(`Ошибка ${err}`))\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }\n\n  function handleUpdateUser(inputValues) {\n    setIsLoading(true);\n    api.setUserData(inputValues.name, inputValues.about)\n      .then((user) => {\n        setCurrentUser(user);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(`Ошибка ${err}`))\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }\n\n  function handleUpdateAvatar(avatar) {\n    setIsLoading(true);\n    api.setUserAvatar(avatar.avatar)\n      .then((avatar) => {\n        setCurrentUser(avatar);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(`Ошибка ${err}`))\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }\n  \n  function handleAddPlaceSubmit(inputValues) {\n    setIsLoading(true);\n    api.addNewCard(inputValues.name, inputValues.link)\n      .then((data) => {\n        setCards([data, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(`Ошибка ${err}`))\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }\n\n  function registration(registerData) {\n    Auth.register(registerData)\n      .then(() => {\n        setInfoTooltipType(\"reg_success\");\n        setInfoTooltipOpen(true);\n        navigate('/sign-in');\n      })\n      .catch((err) => {\n        handleInfoTooltipPopupOpen();\n        setInfoTooltipType(\"error\");\n        console.log(err)\n      })\n      .finally(() => {\n        handleInfoTooltipPopupOpen();\n      });\n  }\n\n  function authorization(loginData) {\n    Auth.authorize(loginData)\n      .then((res) => {\n        setLoggedIn(true);\n        localStorage.setItem(\"jwt\", res.token);\n        setEmail(loginData.email);\n        navigate('/', { replace: true });\n      })\n      .catch((err) => {\n        handleInfoTooltipPopupOpen();\n        setInfoTooltipType(\"error\");\n        console.log(err);\n      })\n  }\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n\n  function handleNewPlaceClick() {\n    setNewPlacePopupOpen(true);\n  }\n\n  function handleUpdateAvatarClick() {\n    setUpdateAvatarPopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleDeletePlaceClick(card) {\n    setDeletePlacePopupOpen(true);\n    setDeleteCard(card);\n  }\n\n  function handleInfoTooltipPopupOpen() {\n    setInfoTooltipOpen(true);\n  }\n\n  useEffect(() => {\n    loggedIn ? navigate(\"/\") : navigate(\"/sign-in\")\n  }, [loggedIn]);\n\n  useEffect(() => {\n    tokenCheck();\n    if (loggedIn) getContent();\n  }, [loggedIn]);\n  \n  const tokenCheck = () => {\n    const token = localStorage.getItem(\"jwt\");\n    if (token) {\n      Auth.tokenCheck(token)\n        .then((res) => {\n          if (res) {\n            setEmail(res.email);\n            setLoggedIn(true);\n          }\n        })\n        .catch(console.error);\n    }\n  }\n\n  const getContent = () => {\n    setIsLoadingAllData(true);\n    api.getAllData()\n      .then((data) => {\n        const [userData, cardsData] = data;\n        setCards(cardsData.reverse());\n        setCurrentUser(userData);\n      })\n      .catch(error => console.log(error))\n      .finally(() => {\n        setIsLoadingAllData(false);\n      })\n  }\n\n  function signOut() {\n    localStorage.removeItem(\"jwt\");\n    setEmail(\"\");\n    setCurrentUser({});\n    setCards([]);\n    navigate('/sign-up');\n    setLoggedIn(false);\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page_wrapper\">\n\n        <Header\n          loggedIn={loggedIn}\n          email={email}\n          signOut={signOut} />\n        <Routes >\n          <Route\n            path=\"/\"\n            element={\n              <ProtectedRoute\n                isLoggedIn={loggedIn}\n                checkToken={tokenCheck}\n                element={Main}\n                onEditProfile={handleEditProfileClick}\n                onNewPlace={handleNewPlaceClick}\n                onUpdateAvatar={handleUpdateAvatarClick}\n                onCardClick={handleCardClick}\n                onDeleteCard={handleDeletePlaceClick}\n                cards={cards}\n                onCardLike={handleCardLike}\n                isLoadingAllData={isLoadingAllData}\n              />\n            }\n          />\n          <Route\n            path=\"/sign-up\"\n            element={\n              <Register\n                registration={registration}\n              />\n            }\n          />\n          <Route path=\"/sign-in\"\n            element={\n              <Login authorization={authorization}\n              />\n            }\n          />\n          <Route\n            path=\"/\"\n            element={\n              loggedIn ? <Navigate to=\"/\" /> : <Navigate to=\"/sign-in\" />\n            }\n          />\n        </Routes>\n        <Footer />\n\n        <EditProfilePopup\n          popupOpen={editProfilePopupOpen}\n          isLoadingAllData={isLoadingAllData}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n          isLoading={isLoading}\n          loadingText=\"Сохранение...\"\n        />\n\n        <AddPlacePopup\n          popupOpen={newPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n          isLoading={isLoading}\n          loadingText=\"Добавление...\"\n        >\n        </AddPlacePopup>\n\n        <EditAvatarPopup\n          popupOpen={updateAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n          isLoading={isLoading}\n          loadingText=\"Сохранение...\"\n        >\n        </EditAvatarPopup>\n\n        <PopupWithForm\n          popupType=\"delete-place\"\n          popupTitle=\"Вы уверены?\"\n          submitButtonText=\"Да\"\n          popupOpen={deletePlacePopupOpen}\n          onClose={closeAllPopups}\n          onSubmit={handleCardDelete}\n          isLoading={isLoading}\n          loadingText=\"Удаление...\"\n        />\n\n        <ImagePopup\n          popupOpen={updateAvatarPopupOpen}\n          card={selectedCard}\n          onClose={closeAllPopups}\n        />\n        <InfoTooltip\n          popupOpen={infoTooltipOpen}\n          onClose={closeAllPopups}\n          type={infoTooltipType}\n        />\n\n      </div>\n    </CurrentUserContext.Provider >\n  );\n}\n\nexport default App;\n","C:\\Users\\Freddy\\Desktop\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\utils\\auth.js",[],[],"C:\\Users\\Freddy\\Desktop\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\utils\\api.js",[],[],"C:\\Users\\Freddy\\Desktop\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\ProtectedRoute.js",[],[],"C:\\Users\\Freddy\\Desktop\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\Header.jsx",["106"],[],"import React from 'react';\nimport headerLogo from '../images/headerLogo.svg';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst Header = (props) => {\n\n    const location = useLocation();\n\n    const [menuBurgerActive, setMenuBurgerActive] = React.useState(false);\n\n    function handleOpenMenu() {\n        setMenuBurgerActive(!menuBurgerActive);\n    }\n\n    return (\n        <header className={props.loggedIn ? \"header header_open\" : \"header\"}>\n            <nav className=\"header__nav\">\n                <div className=\"header__nav-wrapper\">\n                    <a className=\"header__link\" href=\"/\" title=\"Mesto Russia\">\n                        <img className=\"header__logo\" src={headerLogo} alt=\"Логотип Место\" />\n                    </a>\n                    {props.loggedIn && (\n                        <button\n                            className={menuBurgerActive ?\n                                \"header__menu-burger header__menu-burger button-hover\" : \"header__menu-burger button-hover\"}\n                            type=\"button\"\n                            aria-label=\"Меню\"\n                            onClick={handleOpenMenu}\n                        />\n                    )}\n                    {!props.loggedIn && (\n                        <>\n                            {location.pathname === '/sign-up' &&\n                                <Link to=\"/sign-in\" className=\"header__button button-hover\">Войти</Link>\n                            }\n                            {location.pathname === '/sign-in' &&\n                                <Link to=\"/sign-up\" className=\"header__button button-hover\">Регистрация</Link>\n                            }\n                        </>\n                    )}\n                </div>\n                {props.loggedIn && (\n                    <div className={menuBurgerActive ? \"header__menu header__menu_open\" : \"header__menu\"}>\n                        <p className=\"header__email\">{props.email}</p>\n                        <a onClick={props.signOut} className=\"header__button header__button-logout button-hover\">\n                            Выйти\n                        </a>\n                    </div>\n                )}\n            </nav>\n        </header>\n    );\n};\n\nexport default Header;","C:\\Users\\Freddy\\Desktop\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\contexts\\CurrentUserContext.js",[],[],"C:\\Users\\Freddy\\Desktop\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\Main.jsx",[],[],"C:\\Users\\Freddy\\Desktop\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\Footer.jsx",[],[],"C:\\Users\\Freddy\\Desktop\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\ImagePopup.jsx",[],[],"C:\\Users\\Freddy\\Desktop\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\EditAvatarPopup.jsx",[],[],"C:\\Users\\Freddy\\Desktop\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\PopupWithForm.jsx",[],[],"C:\\Users\\Freddy\\Desktop\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\EditProfilePopup.jsx",[],[],"C:\\Users\\Freddy\\Desktop\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\Login.jsx",[],[],"C:\\Users\\Freddy\\Desktop\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\InfoTooltip.jsx",[],[],"C:\\Users\\Freddy\\Desktop\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\AddPlacePopup.jsx",[],[],"C:\\Users\\Freddy\\Desktop\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\Register.jsx",[],[],"C:\\Users\\Freddy\\Desktop\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\utils\\utils.js",[],[],"C:\\Users\\Freddy\\Desktop\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\Card.jsx",[],[],"C:\\Users\\Freddy\\Desktop\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\Popup.jsx",["107"],[],"import React, { useEffect } from \"react\";\n\nconst Popup = (props) => {\n\n    const { closeHandler, className, children, isOpen } = props;\n\n    const closeByEsc = (evt) => {\n        if (evt.key === \"Escape\") {\n            closeHandler();\n        }\n    };\n\n    const handleOverlayClose = (evt) => {\n        if (evt.target.classList.contains(\"popup\")) {\n            closeHandler();\n        }\n    };\n\n    useEffect(() => {\n        if (isOpen) {\n            document.addEventListener(\"click\", handleOverlayClose, false);\n            document.addEventListener(\"keydown\", closeByEsc, false);\n        }\n\n        return () => {\n            document.removeEventListener(\"click\", handleOverlayClose, false);\n            document.removeEventListener(\"keydown\", closeByEsc, false);\n        };\n    }, [isOpen, closeHandler]);\n\n    return (\n        <div className={className}>\n            {children}\n        </div>\n    );\n};\n\nexport default Popup;",{"ruleId":"108","severity":1,"message":"109","line":176,"column":6,"nodeType":"110","endLine":176,"endColumn":16,"suggestions":"111"},{"ruleId":"112","severity":1,"message":"113","line":45,"column":25,"nodeType":"114","endLine":45,"endColumn":114},{"ruleId":"108","severity":1,"message":"115","line":29,"column":8,"nodeType":"110","endLine":29,"endColumn":30,"suggestions":"116"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["117"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has missing dependencies: 'closeByEsc' and 'handleOverlayClose'. Either include them or remove the dependency array.",["118"],{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},"Update the dependencies array to be: [loggedIn, navigate]",{"range":"123","text":"124"},"Update the dependencies array to be: [isOpen, closeHandler, handleOverlayClose, closeByEsc]",{"range":"125","text":"126"},[5096,5106],"[loggedIn, navigate]",[785,807],"[isOpen, closeHandler, handleOverlayClose, closeByEsc]"]